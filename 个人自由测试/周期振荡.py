"""
本函数呢，是专用用来构造一个整数振荡周期。
共有两个参数：
	“循环体”，是指循环的总长度，例:该值取值3，代表每调用三次，完成一个循环。
	“循环数”，指开始循环的位置，例:该值取值2，代表从2开始，每次递减1，达到循环体次数时，回到2的位置。

函数的意义：
	函数的返回值是从“循环数”开始，进行“循环体”次递减1的过程。
	当“循环体”大于“循环数”时，则必经过“0”点，返回值必有一个且只有一个“0”值，“0”值为假，其余均为真。
	通过真假判断，可以断定是否达到目标点。

例：
	两个行星共同围绕恒星进行周期性旋转。行星1的公转时间是30秒，行星2的公转时间是45秒，求两行星共同经过“恒星-0点”的时刻。
	则，行星1的“循环体”为30，行星2的“循环体”为45。
	将两行星目前的位置，与“恒星-0点”位置对比，得出此刻目前的“循环数”
	每秒调用一次两个函数的值，当两函数均返回“假”时，即两行星共同经过“恒星-0点”的时刻。
代码示例：
	行星1=周期(30,19)
	行星2=周期(47,33)
	a=0
	while True:
		a += 1
		if next(行星1) or next(行星2) = Fales:
			print("%d秒后，两行星共同经过恒星-0点" % a)
			break

"""
__init__=("正周期","负周期")


def 负周期(循环体=2,循环数=1):
	循环数 = 循环数 % 循环体
	while True:
		循环数 -= 1
		yield 循环数
		if 循环数==0:
			循环数+=循环体




def 正周期(循环体=2,循环数=1):
	循环数 = 循环数 % 循环体
	while True:
		循环数 += 1
		if 循环数==循环体:
			循环数-=循环体
		yield 循环数


def test():

	行星1=正周期(30,19)
	行星2=负周期(46,33)
	a=0
	while True:
		a += 1
		b1 = next(行星1)
		b2 = next(行星2)
		if b1==0 and b2==0:
			print("%d秒后，两行星共同经过恒星-0点" % a)
			break


if __name__ == '__main__':
	test()
